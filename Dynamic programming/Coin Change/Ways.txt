#include<bits/stdc++.h>
typedef long long int   ll;
typedef long int   l;
typedef long double     ld;
 
#define pii pair<long long int,long long int>
#define intmax  INT_MAX
#define endl        "\n"
#define READ(x)     freopen(x,"r",stdin)
#define WRITE(x)    freopen(x,"w",stdout)
#define sl(x) scanf("%lld", &x)
#define pl(x) printf("%lld", x)
#define BOOST       ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)
// for(auto i:v)
#define MAX_LIMIT 1000000
#define mem(a,b)        memset(a,b,sizeof(a))
#define pb              push_back
#define gcd(a, b)       __gcd(a, b)
#define vsorti(v)         sort(v.begin(),v.end())
#define vsortd(v)         sort(v.begin(), v.end(), greater<long long int>());
#define asortd(a,n)       sort(a+1,a+1+n, greater<long long int>());
#define asorti(a,n)       sort(a+1,a+1+n)
#define fo(n)             for(int i=1;i<=n;i++)
const int M=1000000007;
using namespace std;
int n,sum;
//ll count=0;
int a[109];
int dp[1000009];
 
int mydp(int value)
{
   if(value<=0)
   {
     if(value==0) return 1;
     else return 0;
   }
   if(dp[value]!=-1)
   {
     return dp[value];
   }
   int count=0;
  for(int i=1;i<=n;i++)
  {
     if(value-a[i]>=0)
     {
        count+=mydp(value-a[i]);
        count%=M;
     }
  }
  return dp[value]=count;
}
 
int main()
{
 
     BOOST;
     mem(dp,-1);
     cin>>n>>sum;
     fo(n)
     {
       cin>>a[i];
     }
     cout<<mydp(sum);
     return 0;
}