#include<bits/stdc++.h>
typedef long long int   ll;
typedef long int   l;
typedef long double     ld;
#define pii pair<long long int,long long int>
#define intmax  INT_MAX
#define endl        "\n"
#define READ(x)     freopen(x,"r",stdin)
#define WRITE(x)    freopen(x,"w",stdout)
#define sl(x) scanf("%lld", &x)
#define pl(x) printf("%lld", x)
#define BOOST       ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)
// for(auto i:v)
#define MAX_LIMIT 1000006
#define mem(a,b)        memset(a,b,sizeof(a))
#define pb              push_back
#define gcd(a, b)       __gcd(a, b)
#define vsorti(v)         sort(v.begin(),v.end())
#define vsortd(v)         sort(v.begin(), v.end(), greater<long long int>());
#define asortd(a,n)       sort(a+1,a+1+n, greater<long long int>());
#define asorti(a,n)       sort(a+1,a+1+n)
#define fo(n)             for(int i=1;i<=n;i++)
using namespace std;
string s,t;
int dp[3009][3009];
int mydp(int i,int j)
{
    if(i>=s.size() || j>=t.size()) return 0;

    if(dp[i][j]!=-1) return dp[i][j];

    if(s[i]==t[j])
    {
       return dp[i][j]=1+mydp(i+1,j+1);
    }
    else
    {
       int x=mydp(i+1,j);
       int y=mydp(i,j+1);
       return dp[i][j]=max(x,y);
    }
}
string str=""; 
void print(int i,int j)
{
    if(i>=s.size() || j>=t.size()) return;
    
    int value=mydp(i,j);
    if(s[i]==t[j])
    {
       str.pb(s[i]);
       print(i+1,j+1);
    }
    else
    {
       int x=mydp(i+1,j);
       int y=mydp(i,j+1);
       if(value==x) print(i+1,j);
       else print(i,j+1);
    }
}
int main()
{

     BOOST;
     cin>>s>>t;
     mem(dp,-1);
     mydp(0,0);
     print(0,0);
     cout<<str;
     return 0;
}
