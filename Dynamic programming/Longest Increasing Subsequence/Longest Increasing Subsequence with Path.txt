#include<bits/stdc++.h>
typedef long long int   ll;
typedef long int   l;
typedef long double     ld;

#define pii pair<long long int,long long int>
#define intmax  INT_MAX
#define endl        "\n"
#define READ(x)     freopen(x,"r",stdin)
#define WRITE(x)    freopen(x,"w",stdout)
#define sl(x) scanf("%lld", &x)
#define pl(x) printf("%lld", x)
#define BOOST       ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)
#define fraction() cout.unsetf(ios::floatfield);cout.precision(10);cout.setf(ios::fixed,ios::floatfield);
// for(auto i:v)
#define mem(a,b)            memset(a,b,sizeof(a))
#define pb                  push_back
#define gcd(a, b)           __gcd(a, b)
#define lcm(a, b)           ((a*b)/(gcd(a,b)))
#define pow(a, b)           (ll)(pow(a,b)+1e-9)
#define vsorti(v)           sort(v.begin(),v.end())
#define vsortd(v)           sort(v.begin(), v.end(), greater<ll>());
#define asorti(a,n)         sort(a+1,a+1+n);
#define asortd(a,n)         sort(a+1,a+1+n, greater<ll>());


#define fo(n)               for(int i=1;i<=n;i++)
#define fov(v)              for(int i=0;i<v.size();i++)
#define fos(s)              for(int i=0;i<s.size();i++)


using namespace std;

/*

bool cmp ( pii A , pii B)
{
   return A.first < B.first;

}


 struct structure_name
 {

   int u,v,w;
   structure_name(int _u,int _v,int _w)
   {
      u=_u;
      v=_v;
      w=_w;

   }
 };
*/

////////////////CODE/////////////////////////////////


ll n;
ll arr[109];
ll dp[109][109];

ll mydp(ll posi,ll prev)
{
    if(posi>n) return 0;
    if(dp[posi][prev]!=-1) return dp[posi][prev];
    
    ll ans=0;
    ans=max(ans,mydp(posi+1,prev));

    if(prev==0 or arr[prev]<=arr[posi])
    {
        ans=max(ans,mydp(posi+1,posi)+1);
    }

    return dp[posi][prev]=ans;
}

void print(ll posi,ll prev)
{
    if(posi>n) return ;


    if(prev==0 or arr[prev]<=arr[posi])
    {
        if(dp[posi][prev]==mydp(posi+1,posi)+1)
        {
            cout<<arr[posi]<<" ";
            print(posi+1,posi);
            return;
        }
    }

    if(dp[posi][prev]==mydp(posi+1,prev))
    {
        print(posi+1,prev);
        return;
    }
}

void solve()
{
    mem(dp,-1);
    cin>>n;
    fo(n)
    {
        cin>>arr[i];
    }

    cout<<mydp(1,0)<<endl;
    print(1,0);
    cout<<endl;
}


int main()
{

        BOOST;
       //READ("in.txt");
       //WRITE("out.txt");
        int t;
        cin>>t;
        while(t--)
        {
          solve();
        }

       return 0;
}